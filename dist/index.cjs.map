{"version":3,"file":"index.cjs","sources":["../src/pubsub/subscribe.ts","../src/util/create-command.ts","../src/util/execute.ts","../src/util/endpoint.ts"],"sourcesContent":["import { createCommand } from \"../util/create-command\";\n\nexport const subscribe = createCommand(async (execute, topic: string) => {\n    const res = await execute('pubsub/sub', { arg: topic }, { timeout: false })\n    return streamAsyncIterator(res.body!)\n})\n\nasync function* streamAsyncIterator(stream: ReadableStream) {\n    // Get a lock on the stream\n    const reader = stream.getReader();\n    const decoder = new TextDecoder()\n\n    try {\n        while (true) {\n            // Read from the stream\n            const { done, value } = await reader.read();\n            // Exit if we're done\n            if (done) return;\n            // Else yield the chunk\n            yield JSON.parse(decoder.decode(value));\n        }\n    }\n    finally {\n        reader.releaseLock();\n    }\n}","import { Endpoint } from './endpoint'\nimport { createExecute, Execute } from './execute'\n\ntype IPFSCommand<O extends any[], R extends any> = (execute: Execute, ...args: O) => Promise<R>\n\nexport function createCommand<O extends any[], R = any>(command: IPFSCommand<O, R>) {\n    return (endpoint: Endpoint, ...args: O) => command(createExecute(endpoint), ...args)\n}","import { Endpoint } from './endpoint'\n\nexport interface ExecuteOptions extends RequestInit {\n    timeout?: number | false\n}\n\nexport type Execute = (action: string, params?: Record<string, any> | URLSearchParams, options?: ExecuteOptions) => Promise<Response>\n\nexport const createExecute = (endpoint: Endpoint): Execute => (action, params = {}, options = {}) => {\n    const searchParams = new URLSearchParams(params)\n    const url = `${endpoint.url}/${action}${searchParams && '?' + searchParams}`\n\n    return endpoint.fetch(url, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        ...options\n    })\n}","interface ClientOptions {\n    url?: string\n    protocol?: string\n    host?: string\n    port?: number\n    path?: string\n    fetch?: typeof fetch\n    timeout?: number | false\n}\n\nexport interface Endpoint {\n    url: string\n    fetch: (url: string, options: RequestInit & { timeout?: number | false }) => Promise<Response>\n}\n\nexport function createClient(options: ClientOptions = {}): Endpoint {\n    const {\n        protocol = 'http',\n        host = 'localhost',\n        port = 5001,\n        path = 'api/v0',\n        url = `${protocol}://${host}:${port}/${path}`,\n        fetch: _fetch = fetch,\n        timeout = 5000\n    } = options\n\n    return {\n        url,\n        fetch: (url: string, options: RequestInit & { timeout?: number | false }) => {\n            if (options.timeout === false || timeout === false) {\n                return _fetch(url, options)\n            } else {\n                return Promise.race([\n                    new Promise<never>((_, reject) => setTimeout(() => reject('Request timed out'), options.timeout || timeout)),\n                    _fetch(url, options)\n                ])\n            }\n        }\n    }\n}"],"names":["subscribe","command","async","execute","topic","stream","reader","getReader","decoder","TextDecoder","done","value","read","JSON","parse","decode","releaseLock","streamAsyncIterator","arg","timeout","body","endpoint","args","action","params","options","searchParams","URLSearchParams","url","fetch","method","headers","Content-Type","createExecute","protocol","host","port","path","_fetch","Promise","race","_","reject","setTimeout"],"mappings":"oEAEO,MAAMA,GCG2CC,EDHjBC,MAAOC,EAASC,IAKvDF,gBAAoCG,GAEhC,MAAMC,EAASD,EAAOE,YAChBC,EAAU,IAAIC,YAEpB,IACI,OAAa,CAET,MAAMC,KAAEA,EAAIC,MAAEA,SAAgBL,EAAOM,OAErC,GAAIF,EAAM,aAEJG,KAAKC,MAAMN,EAAQO,OAAOJ,aAIpCL,EAAOU,eAnBJC,QADWd,EAAQ,aAAc,CAAEe,IAAKd,GAAS,CAAEe,SAAS,KACpCC,MCExB,CAACC,KAAuBC,IAAYrB,ECElB,CAACoB,GAAgC,CAACE,EAAQC,EAAS,GAAIC,EAAU,MAC1F,MAAMC,EAAe,IAAIC,gBAAgBH,GACnCI,EAAM,GAAGP,EAASO,OAAOL,IAASG,GAAgB,IAAMA,IAE9D,OAAOL,EAASQ,MAAMD,EAAK,CACvBE,OAAQ,OACRC,QAAS,CACLC,eAAgB,uBAEjBP,KDX4CQ,CAAcZ,MAAcC,QAD3BrB,kFEU3BwB,EAAyB,IAClD,MAAMS,SACFA,EAAW,OAAMC,KACjBA,EAAO,YAAWC,KAClBA,EAAO,KAAIC,KACXA,EAAO,SAAQT,IACfA,EAAM,GAAGM,OAAcC,KAAQC,KAAQC,IACvCR,MAAOS,EAAST,MAAKV,QACrBA,EAAU,KACVM,EAEJ,MAAO,CACHG,IAAAA,EACAC,MAAO,CAACD,EAAaH,KACO,IAApBA,EAAQN,UAAiC,IAAZA,EACtBmB,EAAOV,EAAKH,GAEZc,QAAQC,KAAK,CAChB,IAAID,SAAe,CAACE,EAAGC,IAAWC,YAAW,IAAMD,EAAO,sBAAsBjB,EAAQN,SAAWA,KACnGmB,EAAOV,EAAKH"}